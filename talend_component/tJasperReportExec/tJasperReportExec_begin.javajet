<%@ jet
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode) codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String dataSource = ElementParameterParser.getValue(node, "__DATASOURCE__");
	String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
	String xmlFile = ElementParameterParser.getValue(node, "__XML_DS_FILE__");
	boolean xmlUseSelectExprFromReport = "true".equals(ElementParameterParser.getValue(node, "__XML_USE_SELECT_EXPR_FROM_REPORT__"));
	String xmlSelect = ElementParameterParser.getValue(node, "__XML_SELECT_EXPR__");
	if (xmlSelect == null || xmlSelect.isEmpty() || xmlUseSelectExprFromReport) {
		xmlSelect = "null";
	}
	String xmlDatePattern = ElementParameterParser.getValue(node, "__XML_DATE_PATTERN__");
	if (xmlDatePattern == null || xmlDatePattern.isEmpty()) {
		xmlDatePattern = "null";
	}
	String xmlNumberPattern = ElementParameterParser.getValue(node, "__XML_NUMBER_PATTERN__");
	if (xmlNumberPattern == null || xmlNumberPattern.isEmpty()) {
		xmlNumberPattern = "null";
	}
	String jrxmlFile = ElementParameterParser.getValue(node, "__JRXML_FILE__");
	String useJavaCompiler = ElementParameterParser.getValue(node, "__USE_JAVA_AS_LANG__");
	String numberDummyRecords = ElementParameterParser.getValue(node, "__DUMMY_DS_NUMBER_RECORDS__");
	boolean dieOnError = "true".equals(ElementParameterParser.getValue(node, "__DIE_ON_ERROR__"));
%>
	boolean <%=cid%>_ok = true;
	globalMap.put("<%=cid%>_REPORT_FINISHED_SUCCESSFULLY", <%=cid%>_ok);
    de.jlo.talendcomp.jasperreportexec.JasperReportExecuter <%=cid%> = new de.jlo.talendcomp.jasperreportexec.JasperReportExecuter();
   	<%=cid%>.setFixLanguage(<%=useJavaCompiler%>);
    try {
    	<%=cid%>.setJrxmlFile(<%=jrxmlFile%>);
    } catch (Exception e) {
		String message = "Setup report design failed: " + e.getMessage();
	    globalMap.put("<%=cid%>_ERROR_MESSAGE", message); 
	    <%=cid%>_ok = false;
		globalMap.put("<%=cid%>_REPORT_FINISHED_SUCCESSFULLY", <%=cid%>_ok);
<%	if (dieOnError) { %>
		throw e;
<%  } %>
    }
	if (<%=cid%>_ok) {
	    try {
			<%=cid%>.compileReport();
    	} catch (Exception e) {
			String message = "Compile report failed: " + e.getMessage();
	    	globalMap.put("<%=cid%>_ERROR_MESSAGE", message); 
	    	<%=cid%>_ok = false;
			globalMap.put("<%=cid%>_REPORT_FINISHED_SUCCESSFULLY", <%=cid%>_ok);
<%	if (dieOnError) { %>
			throw e;
<%  } %>
    	}
   	}
	if (<%=cid%>_ok) {
	    try {
<%  if ("DB_CONNECTION".equals(dataSource)) { %>
    		<%=cid%>.setConnection((java.sql.Connection) globalMap.get("conn_" + "<%=connection%>"));
<%  } else if ("XML_FILE".equals(dataSource)) { %>
			<%=cid%>.setXmlDataSource(<%=xmlFile%>, <%=xmlSelect%>, <%=xmlDatePattern%>, <%=xmlNumberPattern%>);
<%  } else if ("DUMMY_DS".equals(dataSource)) { %>
			<%=cid%>.setDummyDataSource(<%=numberDummyRecords%>);
<%  } %>	
    	} catch (Exception e) {
			String message = "Setup datasoure report failed: " + e.getMessage();
	    	globalMap.put("<%=cid%>_ERROR_MESSAGE", message); 
	    	<%=cid%>_ok = false;
			globalMap.put("<%=cid%>_REPORT_FINISHED_SUCCESSFULLY", <%=cid%>_ok);
<%	if (dieOnError) { %>
			throw e;
<%  } %>
    	}
   	}